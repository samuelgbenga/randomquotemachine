{"version":3,"sources":["components/RandomBox.js","App.js","reportWebVitals.js","index.js"],"names":["RandomBox","getColor","colors","useState","color","setColor","quote","setQuote","toggle","setToggle","something","content","substring","className","length","onClick","originator","name","axios","request","method","url","headers","then","response","data","Math","floor","random","catch","error","console","App","log","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+QAoGeA,EAhGG,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SACbC,EAAS,CACb,MACA,OACA,SACA,OACA,SACA,SACA,QACA,SACA,QACA,QAEF,EAA0BC,mBAAS,QAAnC,mBAAOC,EAAP,KAAcC,EAAd,KACA,EAA0BF,mBAAS,IAAnC,mBAAOG,EAAP,KAAcC,EAAd,KACA,EAA4BJ,mBAAS,SAArC,mBAAOK,EAAP,KAAeC,EAAf,KA0BIC,EAAYJ,EAAMK,QAClBL,EAAMK,QAAQC,UAAU,EAAG,KAC3B,aAEJ,OACE,sBAAKC,UAAU,eAAf,UACE,qBAAKA,UAAU,QAAf,SACGP,EAAMK,QACL,8BACE,cAAC,IAAD,IADF,OAGGH,EAASE,EAAYJ,EAAMK,QAC3BL,EAAMK,QAAQG,OAAS,KACtB,wBACED,UAAWL,EAAS,WAAa,WACjCO,QAlBS,WACrBN,GAAWD,IAeD,SAIE,0CAKN,8BACE,cAAC,IAAD,IADF,mJAQJ,8BACGF,EAAMU,WACL,uBAAMH,UAAU,OAAhB,eAA0BP,EAAMU,WAAWC,QAE3C,sBAAMJ,UAAU,OAAhB,iCAIJ,sBAAKA,UAAS,2BAAsBT,EAAtB,KAAd,UACE,sBAAKS,UAAU,WAAf,UACE,8BACE,cAAC,IAAD,MAEF,8BACE,cAAC,IAAD,SAGJ,8BACE,wBAAQE,QAzEM,WAoBpB,OAXAG,IACGC,QATW,CACZC,OAAQ,MACRC,IAAK,iDACLC,QAAS,CACP,iBAAkB,qDAClB,kBAAmB,6BAKpBC,MAAK,SAAUC,GACdjB,EAASiB,EAASC,SAEnBF,MAAK,WACJlB,EAASH,EAAOwB,KAAKC,MAAsB,GAAhBD,KAAKE,eAEjCC,OAAM,SAAUC,GACfC,QAAQD,MAAMA,MAEX7B,EAASG,IAqDV,mCC5EK4B,MAbf,WACE,MAA0B7B,mBAAS,OAAnC,mBAAOC,EAAP,KAAcC,EAAd,KACA,OACE,sBAAKQ,UAAWT,EAAhB,UACE,cAAC,EAAD,CAAWH,SAAU,SAACG,GAAD,OAAWC,EAASD,MACzC,sBAAKS,UAAU,SAAf,UACE,wDACCkB,QAAQE,IAAI7B,UCCN8B,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBb,MAAK,YAAkD,IAA/Cc,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.d0c49c4d.chunk.js","sourcesContent":["import React, { useState } from \"react\";\r\nimport { FaTwitter, FaFacebook, FaQuoteLeft } from \"react-icons/fa\";\r\nimport axios from \"axios\";\r\n\r\nconst RandomBox = ({ getColor }) => {\r\n  const colors = [\r\n    \"red\",\r\n    \"blue\",\r\n    \"orange\",\r\n    \"grey\",\r\n    \"indigo\",\r\n    \"purple\",\r\n    \"green\",\r\n    \"yellow\",\r\n    \"brown\",\r\n    \"pink\",\r\n  ];\r\n  const [color, setColor] = useState(\"blue\");\r\n  const [quote, setQuote] = useState({});\r\n  const [toggle, setToggle] = useState(\"false\");\r\n  const handleOnClick = () => {\r\n    var options = {\r\n      method: \"GET\",\r\n      url: \"https://quotes15.p.rapidapi.com/quotes/random/\",\r\n      headers: {\r\n        \"x-rapidapi-key\": \"86ec4e722cmshb326e4f824b391cp1c67c7jsne42429987b0c\",\r\n        \"x-rapidapi-host\": \"quotes15.p.rapidapi.com\",\r\n      },\r\n    };\r\n    axios\r\n      .request(options)\r\n      .then(function (response) {\r\n        setQuote(response.data);\r\n      })\r\n      .then(() => {\r\n        setColor(colors[Math.floor(Math.random() * 10)]);\r\n      })\r\n      .catch(function (error) {\r\n        console.error(error);\r\n      });\r\n    return getColor(color);\r\n  };\r\n  const handleReadmore = () => {\r\n    setToggle(!toggle);\r\n  };\r\n  var something = quote.content\r\n    ? quote.content.substring(0, 150)\r\n    : \"loading...\";\r\n\r\n  return (\r\n    <div className=\"rb-container\">\r\n      <div className=\"quote\">\r\n        {quote.content ? (\r\n          <p>\r\n            <FaQuoteLeft />\r\n            &nbsp;\r\n            {toggle ? something : quote.content}\r\n            {quote.content.length > 149 && (\r\n              <button\r\n                className={toggle ? \"readmore\" : \"readless\"}\r\n                onClick={handleReadmore}\r\n              >\r\n                <span> </span>\r\n              </button>\r\n            )}\r\n          </p>\r\n        ) : (\r\n          <p>\r\n            <FaQuoteLeft />\r\n            &nbsp;Everybody is a genius. But if you judge a fish by its ability\r\n            to climb a tree, it will live its whole life believing that it is\r\n            stupid.\r\n          </p>\r\n        )}\r\n      </div>\r\n      <div>\r\n        {quote.originator ? (\r\n          <span className=\"name\">- {quote.originator.name}</span>\r\n        ) : (\r\n          <span className=\"name\">- Albert Einstein</span>\r\n        )}\r\n      </div>\r\n\r\n      <div className={`rb-container-btm ${color}s`}>\r\n        <div className=\"icon-box\">\r\n          <div>\r\n            <FaTwitter />\r\n          </div>\r\n          <div>\r\n            <FaFacebook />\r\n          </div>\r\n        </div>\r\n        <div>\r\n          <button onClick={handleOnClick}>Random Qoute</button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default RandomBox;\r\n","import \"./App.scss\";\nimport RandomBox from \"./components/RandomBox\";\nimport React, { useState } from \"react\";\n\nfunction App() {\n  const [color, setColor] = useState(\"red\");\n  return (\n    <div className={color}>\n      <RandomBox getColor={(color) => setColor(color)} />\n      <div className=\"footer\">\n        <h4>samuel built with love</h4>\n        {console.log(color)}\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}